CUDA out of memory. Tried to allocate 24.00 MiB (GPU 0; 9.78 GiB total capacity; 371.30 MiB already allocated; 7.51 GiB free; 496.64 MiB allowed; 476.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONFTraceback (most recent call last):
  File "/workspace/shardscheduler/torch_scheduler.py", line 314, in _poll_FSDP
    self.run_schedule(self.schedules, init=False)
  File "/workspace/shardscheduler/torch_scheduler.py", line 510, in run_schedule
    self.bucket.shard_buffer[:self.bucket.offset]= self.bucket.shard_buffer[:self.bucket.offset] / 2
RuntimeError: CUDA out of memory. Tried to allocate 24.00 MiB (GPU 0; 9.78 GiB total capacity; 371.30 MiB already allocated; 7.51 GiB free; 496.64 MiB allowed; 476.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 24.00 MiB (GPU 0; 9.78 GiB total capacity; 373.26 MiB already allocated; 7.51 GiB free; 496.64 MiB allowed; 474.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONFTraceback (most recent call last):
  File "/workspace/shardscheduler/torch_scheduler.py", line 314, in _poll_FSDP
    self.run_schedule(self.schedules, init=False)
  File "/workspace/shardscheduler/torch_scheduler.py", line 510, in run_schedule
    self.bucket.shard_buffer[:self.bucket.offset]= self.bucket.shard_buffer[:self.bucket.offset] / 2
RuntimeError: CUDA out of memory. Tried to allocate 24.00 MiB (GPU 0; 9.78 GiB total capacity; 373.26 MiB already allocated; 7.51 GiB free; 496.64 MiB allowed; 474.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
